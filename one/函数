func 函数名(a int , b string) (返回值){}
函数中没有默认参数
多个返回值可以用()

func a(b int) (re int) { re = b return}  // 返回re   
func a(b int) int { re := b return re}  // 返回re
func a(b ...int) int {}  // 可变参数在函数中是切片类型
func a(b int, c ... int)  // 固定参数和可便参数出现时,可变在后

func a(b int, c int) (rb, rc int){}  // 多返回值
defer:延迟执行       defer fmt.Println("1)  defer fmt.Println("2)   输出为2   1

函数可以作为变量传递:   a := b   a()

func a(x, y int, op func(int, int) int) int{ }   // 第三个参数表示接收一个两个参数类型为int的返回值为int的函数

匿名函数: func (){}() // 立即执行并调用       a := func(){}  a9()

闭包:函数+外层变量引用


内置函数:{
    close: 关闭channel
    len: 求长度
    new: 分配内存,分配值类型如int , struct,返回的是指针
    make: 分配内存,分配引用类型 如chan,map,slice
    append: 追加元素
    panic,recover:错误处理   recover() 必须和defer使用    defer在panic前

}